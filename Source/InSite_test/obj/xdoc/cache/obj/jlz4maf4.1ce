id: InSite_test
language: CSharp
name:
  Default: InSite_test
qualifiedName:
  Default: InSite_test
type: Assembly
modifiers: {}
items:
- id: InSite_test
  commentId: N:InSite_test
  language: CSharp
  name:
    CSharp: InSite_test
    VB: InSite_test
  nameWithType:
    CSharp: InSite_test
    VB: InSite_test
  qualifiedName:
    CSharp: InSite_test
    VB: InSite_test
  type: Namespace
  assemblies:
  - InSite_test
  modifiers: {}
  items:
  - id: InSite_test.Class1
    commentId: T:InSite_test.Class1
    language: CSharp
    name:
      CSharp: Class1
      VB: Class1
    nameWithType:
      CSharp: Class1
      VB: Class1
    qualifiedName:
      CSharp: InSite_test.Class1
      VB: InSite_test.Class1
    type: Class
    assemblies:
    - InSite_test
    namespace: InSite_test
    source:
      id: Class1
      path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Class1
        VB: Public Class Class1
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: InSite_test.Class1.Value
      commentId: P:InSite_test.Class1.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: Class1.Value
        VB: Class1.Value
      qualifiedName:
        CSharp: InSite_test.Class1.Value
        VB: InSite_test.Class1.Value
      type: Property
      assemblies:
      - InSite_test
      namespace: InSite_test
      source:
        id: Value
        path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
        startLine: 11
      syntax:
        content:
          CSharp: public int Value { get; }
          VB: Public ReadOnly Property Value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: InSite_test.Class1.Value*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: InSite_test.Class1.#ctor(System.Int32)
      commentId: M:InSite_test.Class1.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Class1(Int32)
        VB: Class1(Int32)
      nameWithType:
        CSharp: Class1.Class1(Int32)
        VB: Class1.Class1(Int32)
      qualifiedName:
        CSharp: InSite_test.Class1.Class1(System.Int32)
        VB: InSite_test.Class1.Class1(System.Int32)
      type: Constructor
      assemblies:
      - InSite_test
      namespace: InSite_test
      source:
        id: .ctor
        path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
        startLine: 17
      summary: "\nThis is a ctor\n"
      example: []
      syntax:
        content:
          CSharp: public Class1(int value)
          VB: Public Sub New(value As Integer)
        parameters:
        - id: value
          type: System.Int32
          description: The value of the class
      overload: InSite_test.Class1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: InSite_test.Class1.ConvertToDouble
      commentId: M:InSite_test.Class1.ConvertToDouble
      language: CSharp
      name:
        CSharp: ConvertToDouble()
        VB: ConvertToDouble()
      nameWithType:
        CSharp: Class1.ConvertToDouble()
        VB: Class1.ConvertToDouble()
      qualifiedName:
        CSharp: InSite_test.Class1.ConvertToDouble()
        VB: InSite_test.Class1.ConvertToDouble()
      type: Method
      assemblies:
      - InSite_test
      namespace: InSite_test
      source:
        id: ConvertToDouble
        path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
        startLine: 22
      syntax:
        content:
          CSharp: public double ConvertToDouble()
          VB: Public Function ConvertToDouble As Double
        return:
          type: System.Double
      overload: InSite_test.Class1.ConvertToDouble*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: InSite_test.Class1.SetInnerClass(System.String,InSite_test.Class1.InnerClass)
      commentId: M:InSite_test.Class1.SetInnerClass(System.String,InSite_test.Class1.InnerClass)
      language: CSharp
      name:
        CSharp: SetInnerClass(String, Class1.InnerClass)
        VB: SetInnerClass(String, Class1.InnerClass)
      nameWithType:
        CSharp: Class1.SetInnerClass(String, Class1.InnerClass)
        VB: Class1.SetInnerClass(String, Class1.InnerClass)
      qualifiedName:
        CSharp: InSite_test.Class1.SetInnerClass(System.String, InSite_test.Class1.InnerClass)
        VB: InSite_test.Class1.SetInnerClass(System.String, InSite_test.Class1.InnerClass)
      type: Method
      assemblies:
      - InSite_test
      namespace: InSite_test
      source:
        id: SetInnerClass
        path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
        startLine: 32
      summary: "\nA method referencing a inner class\n"
      example: []
      syntax:
        content:
          CSharp: public void SetInnerClass(string name, Class1.InnerClass inner)
          VB: Public Sub SetInnerClass(name As String, inner As Class1.InnerClass)
        parameters:
        - id: name
          type: System.String
          description: The name
        - id: inner
          type: InSite_test.Class1.InnerClass
          description: A inner class with type <xref href="InSite_test.Class1.InnerClass" data-throw-if-not-resolved="false"></xref>
      overload: InSite_test.Class1.SetInnerClass*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        InSite_test.Class1.InnerClass: 
  - id: InSite_test.Class1.InnerClass
    commentId: T:InSite_test.Class1.InnerClass
    language: CSharp
    name:
      CSharp: Class1.InnerClass
      VB: Class1.InnerClass
    nameWithType:
      CSharp: Class1.InnerClass
      VB: Class1.InnerClass
    qualifiedName:
      CSharp: InSite_test.Class1.InnerClass
      VB: InSite_test.Class1.InnerClass
    type: Class
    assemblies:
    - InSite_test
    namespace: InSite_test
    source:
      id: InnerClass
      path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
      startLine: 38
    syntax:
      content:
        CSharp: public class InnerClass
        VB: Public Class InnerClass
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: InSite_test.Class1.InnerClass.Name
      commentId: P:InSite_test.Class1.InnerClass.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Class1.InnerClass.Name
        VB: Class1.InnerClass.Name
      qualifiedName:
        CSharp: InSite_test.Class1.InnerClass.Name
        VB: InSite_test.Class1.InnerClass.Name
      type: Property
      assemblies:
      - InSite_test
      namespace: InSite_test
      source:
        id: Name
        path: C:\Users\AdamRebacz\source\repos\App_Test\Source\InSite_test\Class1.cs
        startLine: 40
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: InSite_test.Class1.InnerClass.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  InSite_test.Class1.Value*:
    name:
      CSharp:
      - id: InSite_test.Class1.Value*
        name: Value
        nameWithType: Class1.Value
        qualifiedName: InSite_test.Class1.Value
      VB:
      - id: InSite_test.Class1.Value*
        name: Value
        nameWithType: Class1.Value
        qualifiedName: InSite_test.Class1.Value
    isDefinition: true
    commentId: Overload:InSite_test.Class1.Value
  InSite_test.Class1.#ctor*:
    name:
      CSharp:
      - id: InSite_test.Class1.#ctor*
        name: Class1
        nameWithType: Class1.Class1
        qualifiedName: InSite_test.Class1.Class1
      VB:
      - id: InSite_test.Class1.#ctor*
        name: Class1
        nameWithType: Class1.Class1
        qualifiedName: InSite_test.Class1.Class1
    isDefinition: true
    commentId: Overload:InSite_test.Class1.#ctor
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  InSite_test.Class1.ConvertToDouble*:
    name:
      CSharp:
      - id: InSite_test.Class1.ConvertToDouble*
        name: ConvertToDouble
        nameWithType: Class1.ConvertToDouble
        qualifiedName: InSite_test.Class1.ConvertToDouble
      VB:
      - id: InSite_test.Class1.ConvertToDouble*
        name: ConvertToDouble
        nameWithType: Class1.ConvertToDouble
        qualifiedName: InSite_test.Class1.ConvertToDouble
    isDefinition: true
    commentId: Overload:InSite_test.Class1.ConvertToDouble
  InSite_test.Class1.InnerClass:
    name:
      CSharp:
      - id: InSite_test.Class1.InnerClass
        name: Class1.InnerClass
        nameWithType: Class1.InnerClass
        qualifiedName: InSite_test.Class1.InnerClass
      VB:
      - id: InSite_test.Class1.InnerClass
        name: Class1.InnerClass
        nameWithType: Class1.InnerClass
        qualifiedName: InSite_test.Class1.InnerClass
    isDefinition: true
    parent: InSite_test
    commentId: T:InSite_test.Class1.InnerClass
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  InSite_test:
    name:
      CSharp:
      - name: InSite_test
        nameWithType: InSite_test
        qualifiedName: InSite_test
      VB:
      - name: InSite_test
        nameWithType: InSite_test
        qualifiedName: InSite_test
    isDefinition: true
    commentId: N:InSite_test
  InSite_test.Class1.SetInnerClass*:
    name:
      CSharp:
      - id: InSite_test.Class1.SetInnerClass*
        name: SetInnerClass
        nameWithType: Class1.SetInnerClass
        qualifiedName: InSite_test.Class1.SetInnerClass
      VB:
      - id: InSite_test.Class1.SetInnerClass*
        name: SetInnerClass
        nameWithType: Class1.SetInnerClass
        qualifiedName: InSite_test.Class1.SetInnerClass
    isDefinition: true
    commentId: Overload:InSite_test.Class1.SetInnerClass
  InSite_test.Class1:
    name:
      CSharp:
      - id: InSite_test.Class1
        name: Class1
        nameWithType: Class1
        qualifiedName: InSite_test.Class1
      VB:
      - id: InSite_test.Class1
        name: Class1
        nameWithType: Class1
        qualifiedName: InSite_test.Class1
    isDefinition: true
    commentId: T:InSite_test.Class1
  InSite_test.Class1.InnerClass.Name*:
    name:
      CSharp:
      - id: InSite_test.Class1.InnerClass.Name*
        name: Name
        nameWithType: Class1.InnerClass.Name
        qualifiedName: InSite_test.Class1.InnerClass.Name
      VB:
      - id: InSite_test.Class1.InnerClass.Name*
        name: Name
        nameWithType: Class1.InnerClass.Name
        qualifiedName: InSite_test.Class1.InnerClass.Name
    isDefinition: true
    commentId: Overload:InSite_test.Class1.InnerClass.Name
